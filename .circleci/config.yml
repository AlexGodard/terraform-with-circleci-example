version: 2

references:

base_image: &base_image
  hashicorp/terraform:light

working_directory: &working_directory
  ~/example

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  environment:
    BASH_ENV: /root/.bashrc

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

set_terraform_environment: &set_terraform_environment
  run:
    name: set terraform environment
    command: |
      cd && touch $BASH_ENV

      if [ "${CIRCLE_BRANCH}" == "master" ]; then
        echo 'export TERRAFORM_ENVIRONMENT=production' >> $BASH_ENV
      elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
        echo 'export TERRAFORM_ENVIRONMENT=staging' >> $BASH_ENV
      fi
jobs:

  build:
    <<: *default_config
    steps:
      - checkout
      - *set_terraform_environment
      - run:
          name: terraform init
          command: |
            source $BASH_ENV
            cd environments/$TERRAFORM_ENVIRONMENT
            terraform init
      - run:
          name: terraform fmt
          command: |
            source $BASH_ENV
            cd environments/$TERRAFORM_ENVIRONMENT

            if [ $(terraform fmt | grep -v .terraform | tee fmt_result.txt | wc -l) -gt 0 ]; then
              echo "Format of this terraform files is not appropiate:"
              echo

              cat fmt_result.txt
              rm fmt_result.txt
              git checkout -- .

              echo
              echo "Please run terraform fmt"

              exit 1
            fi
      - save_cache:
          key: *repo_cache_key
          paths:
            - *working_directory

  plan:
    <<: *default_config
    steps:
      - *restore_repo

  apply:
    <<: *default_config
    steps:
      - *restore_repo

workflows:
  version: 2
  build_plan_apply:
    jobs:
      - build
      - plan:
          requires:
            - build
      - apply:
          filters:
            branches:
              only: master
          requires:
            - plan

